  <!-- NDR6 rule 9-56 (same as NDR5 rule 10-12) -->
  <pattern id="rule9-56b" xmlns="http://purl.oclc.org/dsdl/schematron">
    <title>External adapter type not a base type</title>
    <rule context="xs:*[(self::xs:extension or self::xs:restriction)
      and (nf:has-effective-conformance-target-identifier(., xs:anyURI('https://docs.oasis-open.org/niemopen/ns/specification/NDR/6.0/#ReferenceSchemaDocument'))
      or nf:has-effective-conformance-target-identifier(., xs:anyURI('https://docs.oasis-open.org/niemopen/ns/specification/NDR/6.0/#ExtensionSchemaDocument')))
      and (some $base-qname in resolve-QName(@base, .),
      $base-namespace in namespace-uri-from-QName($base-qname) satisfies
      not($base-namespace = (nf:get-target-namespace(.), xs:anyURI('http://www.w3.org/2001/XMLSchema'))))]">
      <assert test="nf:resolve-type(., resolve-QName(@base, .))[
        empty(@appinfo:externalAdapterTypeIndicator)]"
        >Rule 9-56: An external adapter type definition MUST NOT be a base type definition.</assert>
    </rule>
  </pattern>
